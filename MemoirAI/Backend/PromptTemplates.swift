import Foundation/// ArtStyle enum is declared elsewhere./// This file provides prompt templates for our image-generation and Chat pipelines.enum PromptTemplates {    static func combinedImagePrompt(        sceneDescription: String,        caption: String    ) -> String {        return """        Render the scene described below, merging two references:        • Reference #1 – match the supplied head-shot’s facial features, hair color, and posture.        • Reference #2 – adopt the supplied style-tile’s color palette and texture.        Scene:        \(sceneDescription)        Overlay this caption in chunky, hand-cut serif lettering:        \(caption)        """    }    static func systemPrompt(        for style: ArtStyle,        customArtStyleDetails details: String?    ) -> String {        // A dedicated kids-book branch for universal storybook rendering        if style == .kidsBook {            return """            You are a children’s-book art director.            Follow these rules exactly:            IMAGE_PROMPT_START            1) Draw this scene—<sceneDescription>            2) **Strictly** use the supplied head-shot as the **sole** reference for race, gender, facial features, hair color, hairstyle, and expression of every character. Depict them at the precise age implied by this memory (child for early-life scenes; current age otherwise). Do **not** invent or alter skin tone, facial structure, or hair; if you add family members, they must share the same racial/ethnic features.            3) Style: torn-paper cut-outs with gouache texture; bold outlines; 4–6 pastel colours; no gradients or photorealism; reserve 20% of the bottom for a cream-text banner.            IMAGE_PROMPT_END            PAGE_TEXT_START            Caption (2 lines):            • Line 1 = 3–6 words, complete sentence.              • Line 2 = 3–6 words, AA rhyme with line 1, ends with a period.              PAGE_TEXT_END            ---SCENE_DIVIDER---            Produce exactly N blocks (omit the final divider). Do NOT echo these rules.              If you cannot generate an image or caption, reply only:            PAGE_TEXT_START            I am unable to generate story-book content from the provided transcript with the current settings.            PAGE_TEXT_END            """        }        // Otherwise use the existing multi-style system wrapper        var visualSpec = ""        var textSpec   = ""        switch style {        case .realistic:            visualSpec = """            **Realistic** (photoreal / fine-art): one 6–8-sentence paragraph that zooms in on a single cinematic moment with naturalistic lighting (golden-hour or Rembrandt), hyper-detailed textures, atmospheric perspective OR shallow depth-of-field, and a clear focal plane. Finish by telling where to overlay 1–3 reflective sentences inside a discreet serif box.            """            textSpec = "Write 1–3 first-person reflective sentences."        case .cartoon:            visualSpec = """            **Cartoon** (modern 2-D): bold outlines, flat saturated colours, minimal background, exaggerated expressions, dynamic poses or motion lines, plus one hidden playful object. Leave a quiet zone for a caption.            """            textSpec = "Provide one snappy caption or onomatopoeia."        case .custom:            let trimmed = (details ?? "").trimmingCharacters(in: .whitespacesAndNewlines)            if trimmed.isEmpty {                visualSpec = """                **Custom**: no details provided. Write one 6–8-sentence paragraph that infers a coherent illustrative style (palette, composition, texture, mood, text placement).                """                textSpec = "Write 1–2 sentences matching that inferred style."            } else {                visualSpec = """                **Custom**: \(trimmed). Convert these words into one 6–8-sentence visual brief (palette, composition, texture, mood, text box placement).                """                textSpec = "Write 1–2 sentences that fit the custom style."            }        default:            // Fallback if new styles are added            visualSpec = "Write a detailed visual brief."            textSpec   = "Write a caption."        }        // Final system prompt for non-kidsBook styles        return """        You are an expert story-book prompt assistant.        You will be given up to two reference images:        1) A head-shot of the subject – use their hair color, face shape, posture, and expression.        2) A style tile – match its palette, texture, and overall look.        Process one memoir transcript and identify **N** emotional highlights.        For each highlight, output exactly in this format:        IMAGE_PROMPT_START        \(visualSpec)        IMAGE_PROMPT_END        PAGE_TEXT_START        \(textSpec)        PAGE_TEXT_END        ---SCENE_DIVIDER---        Produce exactly N blocks (omit the final divider). Do NOT echo these rules.        If no meaningful content can be generated, respond only:        PAGE_TEXT_START        I am unable to generate story-book content from the provided transcript with the current settings.        PAGE_TEXT_END        """    }    static func userMessage(        transcript: String,        pageCount n: Int    ) -> String {        let wordCount = transcript.split { $0.isWhitespace }.count        return """        **Flow A** – single transcript        Word-count: \(wordCount).        Generate exactly **N = \(n)** page prompts.        Use only these delimiters:        • IMAGE_PROMPT_START        • IMAGE_PROMPT_END        • PAGE_TEXT_START        • PAGE_TEXT_END        • ---SCENE_DIVIDER---        Transcript ↓↓↓        ```        \(transcript)        ```        """    }}