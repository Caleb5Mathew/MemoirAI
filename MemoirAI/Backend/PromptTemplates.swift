//  PromptTemplates.swiftimport Foundation/// ArtStyle enum is declared elsewhere./// This file provides prompt templates for our image-generation and Chat pipelines.enum PromptTemplates {    // This function can remain the same.    static func combinedImagePrompt(        sceneDescription: String,        caption: String    ) -> String {        return """        Render the scene described below,        Scene:        \(sceneDescription)        """    }    static func systemPrompt(        for style: ArtStyle,        customArtStyleDetails details: String?    ) -> String {        let styleDescription: String        let captionInstruction: String        switch style {        case .kidsBook:            styleDescription = "charming children's book illustration, with simple, flat shapes and a visible paint texture. Use bold outlines and a limited palette of 4-6 soft pastel colors. The final image must not contain any words or letters."//            captionInstruction = "Generate a two-line rhyming caption. Each line should be 3-6 words long and end with a period."        case .realistic:            styleDescription = "Style: A photorealistic, fine-art photograph. The image should feature a single cinematic moment with naturalistic lighting (like golden-hour or Rembrandt), hyper-detailed textures, and either atmospheric perspective or a shallow depth-of-field with a clear focal plane. The final image must not contain any words, letters, captions, or numbers."//            captionInstruction = "Write 1-3 first-person reflective sentences for the caption."        case .cartoon:            styleDescription = "Style: A modern 2D cartoon. Use bold outlines, flat saturated colors, and minimal backgrounds. Characters should have exaggerated expressions and dynamic poses or motion lines. Hide a small, playful object somewhere in the scene. The final image must not contain any words, letters, captions, or numbers."//            captionInstruction = "Provide one snappy caption or a single onomatopoeia (e.g., 'Zap!', 'Bonk!')."        case .custom:            let trimmed = (details ?? "an undefined style").trimmingCharacters(in: .whitespacesAndNewlines)            styleDescription = "Style: An illustration in a custom style described as: '\(trimmed)'. The final image should embody the palette, composition, texture, and mood from that description. Do not draw a 'brief' or 'mood board'; create the final, single-scene illustration directly. The final image must not contain any words, letters, captions, or numbers."//            captionInstruction = "Write 1-2 sentences for the caption that perfectly fit the custom style."        }        // The 'systemPrompt' return string is updated with much stricter Content Rules.        return """        You are an expert storybook assistant. Your response MUST follow the format below exactly.        Do not add any explanation or text outside of the specified delimiters.        **FORMATTING RULES:**        Your entire response must be structured like this:        IMAGE_PROMPT_START        (Your generated image prompt goes here)        IMAGE_PROMPT_END        PAGE_TEXT_START        (Your generated page caption goes here)        PAGE_TEXT_END        **CONTENT RULES:**        1.  Read the user's enriched transcript. Your goal is to create a detailed image prompt based on it.        2.  Your image prompt **MUST** start with the following style guide: "\(styleDescription)"        3.  After the style guide, you **MUST** provide a detailed visual description for **EVERY** character mentioned in the transcript. This includes their age, race, skin tone, hair, and clothing as described in the text. Do not omit any details. For example, if the text says "Brandon, a Black man in his 40s with deep brown skin, wearing a grey shirt," your prompt must include all of that.        4.  After describing all characters, describe the setting and the specific actions they are performing.        If you cannot generate content, respond only with the text "Error: Could not generate content." and nothing else.        """    }    // This function can remain the same.    static func userMessage(        transcript: String,        pageCount n: Int    ) -> String {        return """        Please analyze the following transcript and generate one page prompt for the single most resonant moment.        Remember to follow the formatting rules from your system prompt exactly.        Transcript to analyze:        ```        \(transcript)        ```        """    }}