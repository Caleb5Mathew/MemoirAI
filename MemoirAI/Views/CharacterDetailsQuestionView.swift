//import SwiftUI//import CoreData////struct CharacterDetailsQuestionView: View {//    @Environment(\.dismiss) private var dismiss//    @Environment(\.managedObjectContext) private var context//    //    let memory: MemoryEntry//    @State private var characterDetails: CharacterDetails//    @State private var showingAddCharacter = false//    @State private var currentCharacterIndex = 0//    @State private var saveSuccess = false//    @State private var isSaving = false//    //    // Colors matching your app theme//    private let backgroundColor = Color(red: 1.0, green: 0.96, blue: 0.89)//    private let cardColor = Color(red: 0.98, green: 0.93, blue: 0.80)//    private let headerColor = Color(red: 0.07, green: 0.21, blue: 0.13)//    private let accentColor = Color(red: 0.88, green: 0.52, blue: 0.28)//    //    init(memory: MemoryEntry) {//        self.memory = memory//        _characterDetails = State(initialValue: memory.parsedCharacterDetails ?? CharacterDetails())//    }//    //    var body: some View {//        NavigationView {//            ZStack {//                backgroundColor.ignoresSafeArea()//                //                ScrollView {//                    VStack(spacing: 24) {//                        // Header//                        headerSection//                        //                        // Memory preview//                        memoryPreviewSection//                        //                        // Characters section//                        charactersSection//                        //                        // Add character button//                        addCharacterButton//                        //                        Spacer(minLength: 100)//                    }//                    .padding()//                }//                //                // Floating Save Button (Bottom Right)//                VStack {//                    Spacer()//                    HStack {//                        Spacer()//                        //                        Button(action: saveDetails) {//                            HStack(spacing: 8) {//                                if isSaving {//                                    ProgressView()//                                        .scaleEffect(0.8)//                                        .progressViewStyle(CircularProgressViewStyle(tint: .white))//                                } else if saveSuccess {//                                    Image(systemName: "checkmark.circle.fill")//                                        .font(.system(size: 16))//                                } else {//                                    Image(systemName: "square.and.arrow.down")//                                        .font(.system(size: 16))//                                }//                                //                                Text(isSaving ? "Saving..." : saveSuccess ? "Saved!" : "Save")//                                    .font(.custom("Georgia-Bold", size: 16))//                            }//                            .foregroundColor(.white)//                            .padding(.horizontal, 20)//                            .padding(.vertical, 12)//                            .background(//                                RoundedRectangle(cornerRadius: 25)//                                    .fill(saveSuccess ? Color.green : accentColor)//                                    .shadow(color: .black.opacity(0.2), radius: 6, x: 0, y: 3)//                            )//                        }//                        .disabled(isSaving)//                        .scaleEffect(saveSuccess ? 1.05 : 1.0)//                        .animation(.spring(response: 0.3, dampingFraction: 0.6), value: saveSuccess)//                        .animation(.spring(response: 0.3, dampingFraction: 0.6), value: isSaving)//                        //                        .padding(.trailing, 20)//                        .padding(.bottom, 40)//                    }//                }//            }//        }//        .navigationBarTitleDisplayMode(.inline)//        .toolbar {//            ToolbarItem(placement: .navigationBarLeading) {//                Button("Cancel") { dismiss() }//            }//        }//    }//    //    private var headerSection: some View {//        VStack(spacing: 12) {//            Text("Add Character Details")//                .font(.custom("Georgia-Bold", size: 24))//                .foregroundColor(headerColor)//            //            Text("Help us create better images by describing the people in this memory")//                .font(.custom("Georgia", size: 16))//                .foregroundColor(.gray)//                .multilineTextAlignment(.center)//        }//    }//    //    private var memoryPreviewSection: some View {//        VStack(alignment: .leading, spacing: 12) {//            Text("Memory")//                .font(.headline)//                .foregroundColor(headerColor)//            //            VStack(alignment: .leading, spacing: 8) {//                Text(memory.prompt ?? "Untitled")//                    .font(.custom("Georgia-Bold", size: 16))//                    .foregroundColor(headerColor)//                //                if let text = memory.text, !text.isEmpty {//                    Text(text)//                        .font(.custom("Georgia", size: 14))//                        .foregroundColor(.black)//                        .lineLimit(4)//                }//            }//        }//        .padding()//        .background(cardColor)//        .cornerRadius(16)//        .shadow(color: Color.black.opacity(0.04), radius: 4, x: 0, y: 4)//    }//    //    private var charactersSection: some View {//        VStack(alignment: .leading, spacing: 16) {//            Text("Characters in this memory")//                .font(.headline)//                .foregroundColor(headerColor)//            //            if characterDetails.characters.isEmpty {//                emptyCharactersView//            } else {//                ForEach(Array(characterDetails.characters.enumerated()), id: \.element.id) { index, character in//                    CharacterCardView(//                        character: $characterDetails.characters[index],//                        onDelete: { removeCharacter(at: index) }//                    )//                }//            }//        }//    }//    //    private var emptyCharactersView: some View {//        VStack(spacing: 12) {//            Image(systemName: "person.2.circle.fill")//                .font(.system(size: 48))//                .foregroundColor(.gray.opacity(0.4))//            //            Text("No characters added yet")//                .font(.custom("Georgia", size: 16))//                .foregroundColor(.gray)//            //            Text("Add the people in this memory to help create better images")//                .font(.caption)//                .foregroundColor(.gray)//                .multilineTextAlignment(.center)//        }//        .padding()//        .background(cardColor.opacity(0.5))//        .cornerRadius(12)//        .overlay(//            RoundedRectangle(cornerRadius: 12)//                .stroke(Color.gray.opacity(0.3), style: StrokeStyle(lineWidth: 1, dash: [5]))//        )//    }//    //    private var addCharacterButton: some View {//        Button(action: addCharacter) {//            HStack(spacing: 8) {//                Image(systemName: "plus.circle.fill")//                Text("Add Character")//            }//            .font(.custom("Georgia", size: 16))//            .fontWeight(.medium)//            .foregroundColor(.white)//            .padding(.horizontal, 20)//            .padding(.vertical, 12)//            .background(accentColor)//            .cornerRadius(12)//        }//    }//    //    private func addCharacter() {//        let newCharacter = CharacterDetails.Character()//        characterDetails.characters.append(newCharacter)//    }//    //    private func removeCharacter(at index: Int) {//        characterDetails.characters.remove(at: index)//    }//    //    private func saveDetails() {//        // Start saving state//        isSaving = true//        saveSuccess = false//        //        // Update the memory with character details//        memory.updateCharacterDetails(characterDetails)//        //        // Save to Core Data//        do {//            try context.save()//            print("✅ Character details saved successfully to Core Data")//            //            // Post notification to refresh other views//            NotificationCenter.default.post(name: .memorySaved, object: nil)//            //            // Success state//            DispatchQueue.main.asyncAfter(deadline: .now() + 0.5) {//                isSaving = false//                saveSuccess = true//                //                // Reset save success after delay and dismiss//                DispatchQueue.main.asyncAfter(deadline: .now() + 1.5) {//                    saveSuccess = false//                    dismiss()//                }//            }//            //        } catch {//            print("❌ Failed to save character details: \(error)")//            isSaving = false//            saveSuccess = false//        }//    }//}////struct CharacterCardView: View {//    @Binding var character: CharacterDetails.Character//    let onDelete: () -> Void//    //    private let cardColor = Color(red: 0.98, green: 0.93, blue: 0.80)//    private let accentColor = Color(red: 0.88, green: 0.52, blue: 0.28)//    //    var body: some View {//        VStack(alignment: .leading, spacing: 16) {//            HStack {//                Text("Character Details")//                    .font(.custom("Georgia-Bold", size: 16))//                    .foregroundColor(.black)//                //                Spacer()//                //                Button(action: onDelete) {//                    Image(systemName: "trash")//                        .foregroundColor(.red)//                }//            }//            //            VStack(spacing: 12) {//                CustomTextField(title: "Name or relationship", text: $character.name, placeholder: "e.g., Mom, John, My friend Sarah")//                CustomTextField(title: "Age at the time", text: $character.age, placeholder: "e.g., 35, teenage, elderly")//                CustomTextField(title: "Race/ethnicity", text: $character.race, placeholder: "e.g., Caucasian, Hispanic, Asian")//                CustomTextField(title: "Physical description", text: $character.physicalDescription, placeholder: "e.g., tall, brown hair, blue eyes, glasses")//                CustomTextField(title: "Clothing/appearance", text: $character.clothing, placeholder: "e.g., blue dress, casual clothes, work uniform")//            }//        }//        .padding()//        .background(cardColor)//        .cornerRadius(16)//        .shadow(color: Color.black.opacity(0.04), radius: 4, x: 0, y: 4)//    }//}////struct CustomTextField: View {//    let title: String//    @Binding var text: String//    let placeholder: String//    //    var body: some View {//        VStack(alignment: .leading, spacing: 4) {//            Text(title)//                .font(.custom("Georgia", size: 12))//                .foregroundColor(.gray)//                .textCase(.uppercase)//            //            TextField(placeholder, text: $text)//                .font(.custom("Georgia", size: 14))//                .padding(.horizontal, 12)//                .padding(.vertical, 8)//                .background(Color.white.opacity(0.8))//                .cornerRadius(8)//                .overlay(//                    RoundedRectangle(cornerRadius: 8)//                        .stroke(Color.gray.opacity(0.3), lineWidth: 1)//                )//        }//    }//}////struct CharacterDetailsQuestionView_Previews: PreviewProvider {//    static var previews: some View {//        let context = PersistenceController.preview.container.viewContext//        let sampleMemory = MemoryEntry(context: context)//        sampleMemory.prompt = "Tell me about your childhood friends"//        sampleMemory.text = "I remember playing with my best friend Sarah. She was always so funny and had curly red hair. We would spend hours in the backyard with my little brother Tom."//        //        return CharacterDetailsQuestionView(memory: sampleMemory)//    }//}