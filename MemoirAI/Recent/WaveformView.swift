// MemoryDetailComponents.swift// MemoirAIimport SwiftUIimport PhotosUI/// Horizontally scrolling gallery with add/replace/delete support.struct GalleryView: View {    @Binding var images: [UIImage]    @Binding var photoItems: [PhotosPickerItem]    let pickAction: () -> Void    @State private var pickerPresented = false    var body: some View {        Group {            if images.isEmpty {                Button {                    pickerPresented = true                    pickAction()                } label: {                    ZStack {                        RoundedRectangle(cornerRadius: 12)                            .stroke(style: StrokeStyle(lineWidth: 2, dash: [5]))                            .frame(width: 80, height: 80)                        Image(systemName: "plus")                            .font(.title)                            .foregroundColor(.gray.opacity(0.6))                    }                }            } else {                ScrollView(.horizontal, showsIndicators: false) {                    HStack(spacing: 12) {                        ForEach(Array(images.enumerated()), id: \.offset) { idx, img in                            Button { } label: {                                Image(uiImage: img)                                    .resizable()                                    .scaledToFill()                                    .frame(width: 80, height: 80)                                    .clipped()                                    .cornerRadius(12)                                    .shadow(color: .black.opacity(0.1), radius: 2, x: 0, y: 1)                            }                            .contextMenu {                                Button("Replace Photo") {                                    pickerPresented = true                                    pickAction()                                }                                Button("Delete Photo", role: .destructive) {                                    images.remove(at: idx)                                }                            }                        }                        Button {                            pickerPresented = true                            pickAction()                        } label: {                            RoundedRectangle(cornerRadius: 12)                                .stroke(style: StrokeStyle(lineWidth: 2, dash: [5]))                                .frame(width: 80, height: 80)                                .overlay(                                    Image(systemName: "plus")                                        .font(.title)                                        .foregroundColor(.gray.opacity(0.6))                                )                        }                    }                    .padding(.horizontal, -16)                }            }        }        .photosPicker(            isPresented: $pickerPresented,            selection:        $photoItems,            matching:         .images,            photoLibrary:     .shared()        )    }}struct MemoryDetailComponents_Previews: PreviewProvider {    static var previews: some View {        VStack(spacing: 16) {            GalleryView(images: .constant([]),                        photoItems: .constant([]),                        pickAction: {})            GalleryView(images: .constant([UIImage(systemName: "photo")!]),                        photoItems: .constant([]),                        pickAction: {})        }        .padding()    }}