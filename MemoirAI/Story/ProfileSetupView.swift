import SwiftUIimport PhotosUIfileprivate struct LocalColors {    static let softCream = Color(red: 0.98, green: 0.96, blue: 0.89)    static let terracotta = Color(red: 0.82, green: 0.45, blue: 0.32)    static let defaultBlack = Color.black    static let defaultGray = Color.gray    static let infoBackground = Color.white.opacity(0.8)    static let subtleControlBackground = Color.black.opacity(0.05)}fileprivate extension Font {    static func appSerif(_ size: CGFloat) -> Font {        .system(size: size, design: .serif)    }}struct ProfileSetupView: View {    @Binding var headshotImage: UIImage?    @Binding var name: String    @Environment(\.dismiss) private var dismiss    @State private var pickerItem: PhotosPickerItem?    @State private var showHeadshotInfo = false    @State private var showNameInfo = false    var body: some View {        ZStack {            // Full-screen soft cream background            LocalColors.softCream.ignoresSafeArea()            VStack(spacing: 0) {                // Custom header matching app style                HStack {                    Button(action: { dismiss() }) {                        Image(systemName: "xmark")                            .font(.title2)                            .foregroundColor(LocalColors.defaultBlack)                            .padding(8)                            .background(LocalColors.subtleControlBackground)                            .clipShape(Circle())                    }                    Spacer()                    Text("Profile Info")                        .font(.appSerif(22))                        .fontWeight(.medium)                        .foregroundColor(LocalColors.defaultBlack)                    Spacer()                    // Placeholder to balance spacing                    Image(systemName: "xmark")                        .opacity(0)                        .padding(8)                }                .padding()                // Scrollable content                ScrollView(showsIndicators: false) {                    VStack(spacing: 32) {                        // Headshot section                        VStack(alignment: .leading, spacing: 12) {                            HStack {                                Text("Headshot (Optional)")                                    .font(.appSerif(18))                                    .foregroundColor(LocalColors.defaultBlack)                                Spacer()                                Image(systemName: showHeadshotInfo ? "chevron.up.circle.fill" : "info.circle")                                    .font(.title2)                                    .foregroundColor(LocalColors.terracotta)                                    .onTapGesture { showHeadshotInfo.toggle() }                            }                            if let image = headshotImage {                                Image(uiImage: image)                                    .resizable()                                    .scaledToFill()                                    .frame(width: 120, height: 120)                                    .clipShape(Circle())                                    .onTapGesture { headshotImage = nil }                                Text("Tap to remove headshot")                                    .font(.caption)                                    .foregroundColor(LocalColors.defaultGray)                            } else {                                PhotosPicker(                                    selection: $pickerItem,                                    matching: .images                                ) {                                    HStack {                                        Image(systemName: "photo")                                            .foregroundColor(LocalColors.terracotta)                                        Text("Upload Headshot")                                            .font(.appSerif(16))                                            .foregroundColor(LocalColors.defaultBlack)                                    }                                    .padding()                                    .background(LocalColors.subtleControlBackground)                                    .cornerRadius(8)                                }                                .onChange(of: pickerItem) { newItem in                                    Task {                                        if let data = try? await newItem?.loadTransferable(type: Data.self),                                           let ui   = UIImage(data: data) {                                            headshotImage = ui                                        }                                    }                                }                            }                            if showHeadshotInfo {                                Text("Including a headshot brings a personal touch—kids love seeing Grandma’s face next to her stories!")                                    .font(.appSerif(14))                                    .foregroundColor(LocalColors.defaultBlack)                                    .padding(8)                                    .background(LocalColors.infoBackground)                                    .cornerRadius(8)                            }                        }                        .padding(.horizontal)                        // Name section                        VStack(alignment: .leading, spacing: 12) {                            HStack {                                Text("Name (Optional)")                                    .font(.appSerif(18))                                    .foregroundColor(LocalColors.defaultBlack)                                Spacer()                                Image(systemName: showNameInfo ? "chevron.up.circle.fill" : "info.circle")                                    .font(.title2)                                    .foregroundColor(LocalColors.terracotta)                                    .onTapGesture { showNameInfo.toggle() }                            }                            TextField("Enter name", text: $name)                                .font(.appSerif(16))                                .padding(12)                                .background(Color.white)                                .cornerRadius(8)                            if showNameInfo {                                Text("Adding a name ensures we personalize captions and keeps things intimate.")                                    .font(.appSerif(14))                                    .foregroundColor(LocalColors.defaultBlack)                                    .padding(8)                                    .background(LocalColors.infoBackground)                                    .cornerRadius(8)                            }                        }                        .padding(.horizontal)                        Spacer(minLength: 20)                    }                    .padding(.top)                }            }        }    }}struct ProfileSetupView_Previews: PreviewProvider {    @State static var img: UIImage? = nil    @State static var name = "Grandma"    static var previews: some View {        ProfileSetupView(headshotImage: $img, name: $name)    }}