////  AddProfileView.swift//  MemoirAI////  Created by user941803 on 5/4/25.//import SwiftUIimport PhotosUIstruct AddProfileView: View {    @Environment(\.dismiss) private var dismiss    @EnvironmentObject private var profileVM: ProfileViewModel    // Style constants    private let headerFontSize: CGFloat = 28    private let subHeaderFontSize: CGFloat = 21  // 3/4 of header    private let bodyFontSize: CGFloat = 18    private let baseBackground = Color(red: 0.98, green: 0.94, blue: 0.86)    private var inputBackground: Color { baseBackground.opacity(0.7) }    @State private var name: String = ""    @State private var photoSelection: PhotosPickerItem? = nil    @State private var selectedPhotoData: Data? = nil    var body: some View {        ZStack {            baseBackground                .ignoresSafeArea()            VStack(spacing: 24) {                // Title                VStack(spacing: 6) {                    Text("Add a New Profile")                        .font(.customSerifFallback(size: headerFontSize))                        .foregroundColor(Color(red: 0.10, green: 0.22, blue: 0.14))                        .fontWeight(.light)                    Text("Who is this memory profile for?")                        .font(.system(size: bodyFontSize))                        .fontWeight(.light)                        .foregroundColor(.black.opacity(0.6))                }                .padding(.top, 40)                // Name Input                TextField("Enter their name...", text: $name)                    .font(.system(size: bodyFontSize))                    .fontWeight(.light)                    .foregroundColor(.black.opacity(0.6))                    .padding()                    .background(inputBackground)                    .cornerRadius(16)                    .padding(.horizontal)                    .shadow(color: Color.black.opacity(0.05), radius: 4, x: 0, y: 2)                // Profile Picture Picker                VStack(spacing: 8) {                    Text("Add a Profile Picture")                        .font(.customSerifFallback(size: subHeaderFontSize))                        .fontWeight(.light)                        .foregroundColor(Color(red: 0.10, green: 0.22, blue: 0.14))                    ZStack(alignment: .bottomTrailing) {                        Group {                            if let data = selectedPhotoData,                               let uiImage = UIImage(data: data) {                                Image(uiImage: uiImage)                                    .resizable()                                    .scaledToFill()                            } else {                                RoundedRectangle(cornerRadius: 20)                                    .strokeBorder(                                        style: StrokeStyle(lineWidth: 2, dash: [8, 8])                                    )                                    .foregroundColor(.gray.opacity(0.4))                                    .background(                                        RoundedRectangle(cornerRadius: 20)                                            .fill(inputBackground)                                    )                                    .overlay(                                        Image(systemName: "photo")                                            .resizable()                                            .scaledToFit()                                            .frame(width: 100, height: 100)                                            .foregroundColor(.gray.opacity(0.6))                                    )                            }                        }                        .frame(width: 200, height: 200)                        .clipShape(RoundedRectangle(cornerRadius: 20))                        .shadow(color: Color.black.opacity(0.05), radius: 4, x: 0, y: 2)                        PhotosPicker(                            selection: $photoSelection,                            matching: .images                        ) {                            Image(systemName: "camera.fill")                                .font(.system(size: 16))                                .padding(10)                                .background(Color.white)                                .clipShape(Circle())                                .shadow(radius: 2)                        }                        .offset(x: -12, y: -12)                    }                    if selectedPhotoData == nil {                        Text("Tap to upload")                            .font(.caption)                            .fontWeight(.light)                            .foregroundColor(.black.opacity(0.5))                    }                }                Spacer()                // Save Button                Button(action: saveProfile) {                    Text("Save Profile")                        .font(.system(size: bodyFontSize, weight: .semibold))                        .foregroundColor(.white)                        .frame(maxWidth: .infinity)                        .padding(.vertical, 14)                        .background(                            name.isEmpty                                ? Color.gray.opacity(0.4)                                : Color(red: 0.83, green: 0.45, blue: 0.14)                        )                        .cornerRadius(24)                        .padding(.horizontal)                }                .disabled(name.isEmpty)                // Cancel Button                Button("Cancel") {                    dismiss()                }                .font(.system(size: bodyFontSize))                .fontWeight(.light)                .foregroundColor(.gray)                .padding(.bottom, 20)            }        }        .onChange(of: photoSelection) { newItem in            guard let item = newItem else { return }            loadPhotoData(from: item)        }    }    private func loadPhotoData(from item: PhotosPickerItem) {        Task {            do {                if let data = try await item.loadTransferable(type: Data.self) {                    selectedPhotoData = data                }            } catch {                print("Failed to load photo: \(error)")            }        }    }    private func saveProfile() {        guard !name.isEmpty else { return }        let profile = Profile(name: name, photoData: selectedPhotoData)        profileVM.addProfile(profile)        dismiss()    }}struct AddProfileView_Previews: PreviewProvider {    static var previews: some View {        AddProfileView()            .environmentObject(ProfileViewModel())    }}